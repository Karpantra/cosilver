<!-- changer le padding  -->

<div class="container text-center">
  <div class="search-options">
    <h3>Trouvez une colocation</h3>
    <%= form_tag(offers_path, method: :get, class: 'form-search') do %>
      <div class="flexbox" id="research-bar">
        <div class="input-container">
         <%= text_field_tag :search, params[:search] , placeholder: "ville", class: "input-medium search-query form-control" %>
        </div>

        <%= submit_tag "Rechercher", class: "btn btn-primary", id: "offers-research-btn" %>
        <%= link_to t(".top_call_to_action", default: "RÃ©-initialiser"), offers_path, class: "navbar-connect-button hidden-xs" %>
      </div>
    <% end %>
  </div>
  <div class="row">
    <div class="map-container text-center col-xs-12 col-sm-6 hidden-xs">
      <div class="mappy" id="offers-map">
          <div id="map" style="width: 100%; height: 70vh;">
          </div>
      </div>
    </div>
    <div class="container-index text-center col-xs-12 col-sm-6">
      <div class="row unscroll">
        <% @offers.each do |offer| %>
          <div class="col-xs-12 col-sm-6">
            <%= render "card", offer: offer %>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<% content_for(:after_js) do %>
  <script>
    $(document).ready(function() {
      var styles = [
    {
        "featureType": "all",
        "elementType": "labels",
        "stylers": [
            {
                "visibility": "off"
            },
            {
                "hue": "#ff0000"
            }
        ]
    },
    {
        "featureType": "administrative.province",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "landscape",
        "elementType": "all",
        "stylers": [
            {
                "saturation": -100
            },
            {
                "lightness": 65
            },
            {
                "visibility": "on"
            }
        ]
    },
    {
        "featureType": "poi",
        "elementType": "all",
        "stylers": [
            {
                "saturation": -100
            },
            {
                "lightness": 51
            },
            {
                "visibility": "simplified"
            }
        ]
    },
    {
        "featureType": "road.highway",
        "elementType": "all",
        "stylers": [
            {
                "saturation": "0"
            },
            {
                "visibility": "on"
            },
            {
                "lightness": "6"
            },
            {
                "hue": "#ff9800"
            }
        ]
    },
    {
        "featureType": "road.arterial",
        "elementType": "all",
        "stylers": [
            {
                "saturation": -100
            },
            {
                "lightness": 30
            },
            {
                "visibility": "on"
            }
        ]
    },
    {
        "featureType": "road.local",
        "elementType": "all",
        "stylers": [
            {
                "saturation": -100
            },
            {
                "lightness": 40
            },
            {
                "visibility": "on"
            }
        ]
    },
    {
        "featureType": "transit",
        "elementType": "all",
        "stylers": [
            {
                "saturation": -100
            },
            {
                "visibility": "simplified"
            }
        ]
    },
    {
        "featureType": "water",
        "elementType": "geometry",
        "stylers": [
            {
                "hue": "#ffff00"
            },
            {
                "lightness": -25
            },
            {
                "saturation": -97
            }
        ]
    },
    {
        "featureType": "water",
        "elementType": "labels",
        "stylers": [
            {
                "visibility": "on"
            },
            {
                "lightness": -25
            },
            {
                "saturation": -100
            }
        ]
    }
]
      var handler = Gmaps.build('Google');
      handler.buildMap({
        provider: {
          styles: styles

        },
        internal: { id: 'map' } }, function() {
        markers = handler.addMarkers(<%= raw @hash.to_json %>);
        handler.bounds.extendWith(markers);
        handler.fitMapToBounds();
        if (markers.length == 0) {
          handler.getMap().setZoom(2);
        } else if (markers.length == 1) {
          handler.getMap().setZoom(14);
        }
      });
    });
  </script>
<% end %>
